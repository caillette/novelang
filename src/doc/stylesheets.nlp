*** Custom stylesheets

It's easy to customize rendering of PDF, HTML and plain text because Novelang relies on FO (Formatting Objects) stylesheets. 

Novelang looks for stylesheets in that order:

`1)` In the directory given by ``novelang.stylesheet.dir`` system property, if defined.

`2)` In a ``style`` directory right under the project directory (from where Novelang was launched)

`3)` Inside ``Novelang-x.x.x.jar`` under the ``/style`` directory.

By default Novelang attempts to render final document using the stylesheet with the name of corresponding format. Otherwise, it uses a default, built-in stylesheet.

<<<
MIME type extension                .pdf     .html
Corresponding default stylesheet    pdf.xsl  html.xsl
>>>

After launching Novelang HTTP daemon, you can use the stylesheet query parameter to override any other stylesheet name:

<<<
http://localhost:8080/chapter-1.html?stylesheet=html-beautiful.xsl
>>>

Stylesheets may be defined for a whole Book as explained later, see the "mapstylesheet" command.


=== eXensible Stylesheet Language

The stylesheets are written in XSL `/ FO`, which stands for eXtensible Stylesheet Language `/ Formatting` Objects. Both are standards developed by the W3C (World Wide Web Consortium). The reference documentation is here:

http://www.w3.org/TR/xsl

There are many valuable tutorials on the Web. Here are some:

http://zvon.org/xxl/XSLTutorial/Output/index.html

http://www.learn-xsl-fo-tutorial.com


=== XSL reuse

Novelang supports stylesheet reuse with standard ``xsl:import`` command. You can reuse Novelang's bundled stylesheets:

<<<
general-punctuation.xsl
punctuation-FR.xsl
punctuation-US-EN.xsl
>>>


=== Character entities

Novelang stylesheets support inclusion of character entities. This means, you can include definition of characters which can no be typed verbatim in the stylesheet, like the non-breaking space.

Such a definition looks like this:

<<<
<!ENTITY nbsp   "&#160;" >
>>>

So inside the stylesheet you just have to type "``&nbsp;``" instead of "``&#160;``".

Novelang comes bundled with those files. Here is how to refer them (it's quite verbose as XML always is) :

<<<
<!DOCTYPE doctype [

    <!ENTITY % ISOnum PUBLIC
        "ISO 8879:1986//ENTITIES Numeric and Special Graphic//EN//XML"
        "ISOnum.pen"
    >
    %ISOnum;

    <!ENTITY % ISOpub PUBLIC
        "ISO 8879:1986//ENTITIES Publishing//EN//XML"
        "ISOpub.pen"
    >
    %ISOpub;

    <!ENTITY % ISOlat1 PUBLIC
        "ISO 8879:1986//ENTITIES Added Latin 1//EN//XML"
        "ISOlat1.pen"
    >
    %ISOlat1;

]>
>>>

For HTML documents, those entities are automatically HTML-escaped when their system name starts with ``ISO 8879:1986//ENTITIES`` as above.
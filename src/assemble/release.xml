<?xml version="1.0" encoding="UTF-8" ?>

<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0
      http://maven.apache.org/xsd/assembly-1.1.0.xsd"
>
  <id/>

  <formats>
    <format>zip</format>
  </formats>

  <includeBaseDirectory>true</includeBaseDirectory>

  <moduleSets>

    <moduleSet>
      <excludes>
        <exclude>*fixture</exclude>
        <exclude>*plugin</exclude>
      </excludes>
      <binaries>
        <outputDirectory>lib</outputDirectory>
        <unpack>false</unpack>
      </binaries>
    </moduleSet>

    <!--
        This doesn't work because of a probable bug in assembly plugin.
        The workaround is to stage the files through some Ant task and package them as fileset.

    <moduleSet>
      <includes>
        <include>org.novelang:documentation</include>
      </includes>
      <binaries>
        <attachmentClassifier>doc-only</attachmentClassifier>
        <outputDirectory>documentation</outputDirectory>
        <unpack>true</unpack>
        <useStrictFiltering>true</useStrictFiltering>
      </binaries>
    </moduleSet>
    -->

  </moduleSets>

  <fileSets>
    <fileSet>
      <directory>modules/documentation/target/documentation</directory>
      <outputDirectory>/documentation</outputDirectory>
      <includes>
        <include>**/*</include>
      </includes>
    </fileSet>
  </fileSets>


  <dependencySets>

    <dependencySet>
      <unpack>false</unpack>
      <scope>runtime</scope>
      <useTransitiveDependencies>true</useTransitiveDependencies>
      <outputDirectory>lib/3rdparty</outputDirectory>
    </dependencySet>

  </dependencySets>

<!--
  <repositories>
    <repository>
      <includeMetadata>true</includeMetadata>
      <outputDirectory>maven2-repository</outputDirectory>
    </repository>
  </repositories>
-->


</assembly>


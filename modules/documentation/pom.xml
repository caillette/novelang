<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <relativePath>../../pom.xml</relativePath>
    <groupId>org.novelang</groupId>
    <artifactId>Novelang</artifactId>
    <version>0.46.0</version>
  </parent>

  <artifactId>Novelang-documentation</artifactId>
  <name>${artifactId}</name>
  <packaging>pom</packaging>

  <properties>
    <rawDocumentSources>${basedir}/src/main/doc</rawDocumentSources>
    <enhancedDocumentSources>${project.build.directory}/enhanced</enhancedDocumentSources>
    <lexemeTableDocument>${enhancedDocumentSources}/source-characters.novella</lexemeTableDocument>
    <generatedDocumentsDirectory>${project.build.directory}/documentation</generatedDocumentsDirectory>
    <lexemeTableMainClass>org.novelang.build.documentation.LexemeTable</lexemeTableMainClass>
  </properties>

  <distributionManagement>
    <repository>
      <id>ignored</id>
      <name>Just make deploy plugin happy</name>
      <url>scp://null</url>
    </repository>
  </distributionManagement>

  <build>
    <plugins>

      <plugin>
        <artifactId>Novelang-producer-plugin</artifactId>
        <groupId>${parent.groupId}</groupId>
        <version>${parent.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <contentRootDirectory>${rawDocumentSources}</contentRootDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${enhancedDocumentSources}</outputDirectory>
              <delimiters>
                <delimiter>@</delimiter>
              </delimiters>
              <resources>
                <resource>
                  <directory>${rawDocumentSources}</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>${parent.groupId}</groupId>
        <artifactId>Novelang-lexeme-table-plugin</artifactId>
        <version>${parent.version}</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <destinationFile>${lexemeTableDocument}</destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <artifactId>Novelang-producer-plugin</artifactId>
        <groupId>${parent.groupId}</groupId>
        <version>${parent.version}</version>
        <executions>
          <execution>
            <id>nhovestone</id>
            <phase>compile</phase>
            <goals>
              <goal>produce</goal>
            </goals>
            <configuration>
              <workingDirectory>${enhancedDocumentSources}</workingDirectory>
              <contentRootDirectory>${enhancedDocumentSources}</contentRootDirectory>
              <outputDirectory>${generatedDocumentsDirectory}</outputDirectory>
              <documentsToRender>
                <param>/novelang.html"</param>
                <param>/novelang.pdf"</param>
                <param>/versions/release-notes.html?stylesheet=announcement-html.xsl"</param>
                <param>/versions/release-notes.novella?stylesheet=announcement-plaintext.xsl"</param>
              </documentsToRender>
            </configuration>
          </execution>
        </executions>
      </plugin>

      


      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <configuration>
              <tasks>

                <!--
                    We could do that with assembly plugin but this way we can inspect the
                    files directly in the target directory.
                -->

                <property name="classpath" refid="maven.runtime.classpath" />

                <copy todir="${generatedDocumentsDirectory}" flatten="true">
                  <fileset dir="${enhancedDocumentSources}" includes="**/*.css" /> 
                </copy>

                <move file="${generatedDocumentsDirectory}/novelang.html" tofile="${generatedDocumentsDirectory}/index.html" />

              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>${lib.maven-assembly-plugin.groupId}</groupId>
        <artifactId>${lib.maven-assembly-plugin.artefactId}</artifactId>
        <version>${lib.maven-assembly-plugin.version}</version>
        <configuration>
          <descriptors>
            <descriptor>src/assemble/website.xml</descriptor>
            <descriptor>src/assemble/release-notes.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id> <!-- This is used for inheritance merges. -->
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      


      <!--
        Warning: this target directly copies files from target directory instead of
        pre-unzipping the artefact in local repository.
        See also: distribution deployment.
      -->
      <plugin>
        <groupId>${lib.wagon-maven-plugin.groupId}</groupId>
        <artifactId>${lib.wagon-maven-plugin.artifactId}</artifactId>
        <version>${lib.wagon-maven-plugin.version}</version>

        <executions>
          <execution>
            <id>upload-documentation</id>
            <phase>deploy</phase>
            <goals>
              <goal>upload</goal>
            </goals>
            <configuration>
              <fromDir>${generatedDocumentsDirectory}</fromDir>
              <includes>*.html,*.css,*.pdf</includes>
              <serverId>novelang.sourceforge.net</serverId>
              <url>sftp://${publish.remote.host}</url>
              <toDir>${publish.remote.doc.dir}</toDir>
            </configuration>
          </execution>
        </executions>

      </plugin>
      

    </plugins>
  </build>

  <dependencies>

    <dependency>
      <groupId>${parent.groupId}</groupId>
      <artifactId>Novelang-bootstrap</artifactId>
      <version>${parent.version}</version>
    </dependency>

    <dependency>
      <groupId>${parent.groupId}</groupId>
      <artifactId>Novelang-lexeme-table-plugin</artifactId>
      <version>${parent.version}</version>
    </dependency>

  </dependencies>


</project>


<?xml version="1.0" encoding="UTF-8" ?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <properties>


    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <novelang.bootstrap.mainClass>novelang.bootstrap.Main</novelang.bootstrap.mainClass>
    <novelang.bootstrap.batchCommand>generate</novelang.bootstrap.batchCommand>


    <!-- Publishing. TODO: prefix with "novelang." once it works. -->

    <publish.remote.host>frs.sourceforge.net</publish.remote.host>
    <publish.remote.project.name>novelang</publish.remote.project.name>
    <publish.remote.dir>n/no/novelang</publish.remote.dir>
    <publish.remote.doc.dir>home/groups/${publish.remote.dir}/htdocs</publish.remote.doc.dir>
    <publish.remote.release.dir>/home/frs/project/${publish.remote.dir}</publish.remote.release.dir>

    <novelang.documentation.releasenotes.classifier>release-notes</novelang.documentation.releasenotes.classifier>


    <!-- Dependencies. -->

    <lib.cobertura.groupid>org.codehaus.mojo</lib.cobertura.groupid>
    <lib.cobertura.artefactid>cobertura-maven-plugin</lib.cobertura.artefactid>
    <lib.cobertura.version>2.4</lib.cobertura.version>

    <lib.antlr.groupid>org.antlr</lib.antlr.groupid>
    <lib.antlr-compiler.artefactid>antlr</lib.antlr-compiler.artefactid>
    <lib.antlr-runtime.artefactid>antlr-runtime</lib.antlr-runtime.artefactid>
    <lib.antlr.version>3.1.1</lib.antlr.version>

    <lib.logback.groupid>ch.qos.logback</lib.logback.groupid>
    <lib.logback.version>0.9.20</lib.logback.version>

    <lib.maven-plugin.groupid>org.apache.maven</lib.maven-plugin.groupid>
    <lib.maven-plugin.artefactid>maven-plugin-api</lib.maven-plugin.artefactid>
    <lib.maven-plugin.version>2.0</lib.maven-plugin.version>

    <lib.maven-jar-plugin.groupid>org.apache.maven.plugins</lib.maven-jar-plugin.groupid>
    <lib.maven-jar-plugin.artefactid>maven-jar-plugin</lib.maven-jar-plugin.artefactid>
    <lib.maven-jar-plugin.version>2.3</lib.maven-jar-plugin.version>

    <lib.maven-assembly-plugin.groupId>org.apache.maven.plugins</lib.maven-assembly-plugin.groupId>
    <lib.maven-assembly-plugin.artefactId>maven-assembly-plugin</lib.maven-assembly-plugin.artefactId>
    <lib.maven-assembly-plugin.version>2.2-beta-5</lib.maven-assembly-plugin.version>

    <lib.maven-compiler-plugin.groupId>org.apache.maven.plugins</lib.maven-compiler-plugin.groupId>
    <lib.maven-compiler-plugin.artefactId>maven-compiler-plugin</lib.maven-compiler-plugin.artefactId>
    <lib.maven-compiler-plugin.version>2.3</lib.maven-compiler-plugin.version>

    <lib.maven-release-plugin.groupId>org.apache.maven.plugins</lib.maven-release-plugin.groupId>
    <lib.maven-release-plugin.artefactId>maven-release-plugin</lib.maven-release-plugin.artefactId>
    <lib.maven-release-plugin.version>2.0</lib.maven-release-plugin.version>

    <lib.junit.groupid>junit</lib.junit.groupid>
    <lib.junit.artefactid>junit</lib.junit.artefactid>
    <lib.junit.version>4.8.1</lib.junit.version>

    <lib.wagon-maven-plugin.groupId>org.codehaus.mojo</lib.wagon-maven-plugin.groupId>
    <lib.wagon-maven-plugin.artifactId>wagon-maven-plugin</lib.wagon-maven-plugin.artifactId>
    <lib.wagon-maven-plugin.version>1.0-beta-3</lib.wagon-maven-plugin.version>

    <lib.maven-wagon-ssh.groupId>org.apache.maven.wagon</lib.maven-wagon-ssh.groupId>
    <lib.maven-wagon-ssh.artifactId>wagon-ssh</lib.maven-wagon-ssh.artifactId>
    <lib.maven-wagon-ssh.version>1.0-beta-6</lib.maven-wagon-ssh.version>

    <lib.properties-maven-plugin.groupId>org.novelang</lib.properties-maven-plugin.groupId>
    <lib.properties-maven-plugin.artefactId>Novelang-properties-plugin</lib.properties-maven-plugin.artefactId>
    <lib.properties-maven-plugin.version>SNAPSHOT</lib.properties-maven-plugin.version>

    <lib.maven-deploy-plugin.groupId>org.apache.maven.plugins</lib.maven-deploy-plugin.groupId>
    <lib.maven-deploy-plugin.artefactId>maven-deploy-plugin</lib.maven-deploy-plugin.artefactId>
    <lib.maven-deploy-plugin.version>2.5</lib.maven-deploy-plugin.version>

    <lib.maven-changes-plugin.groupId>org.apache.maven.plugins</lib.maven-changes-plugin.groupId>
    <lib.maven-changes-plugin.artefactId>maven-changes-plugin</lib.maven-changes-plugin.artefactId>
    <lib.maven-changes-plugin.version>2.3</lib.maven-changes-plugin.version>

    <lib.maven-postman-plugin.groupId>ch.fortysix</lib.maven-postman-plugin.groupId>
    <lib.maven-postman-plugin.artefactId>maven-postman-plugin</lib.maven-postman-plugin.artefactId>
    <lib.maven-postman-plugin.version>0.1.2</lib.maven-postman-plugin.version>

    <lib.maven-dependency-plugin.groupId>org.apache.maven.plugins</lib.maven-dependency-plugin.groupId>
    <lib.maven-dependency-plugin.artefactId>maven-dependency-plugin</lib.maven-dependency-plugin.artefactId>
    <lib.maven-dependency-plugin.version>2.1</lib.maven-dependency-plugin.version>

    <lib.maven-resources-plugin.groupId>org.apache.maven.plugins</lib.maven-resources-plugin.groupId>
    <lib.maven-resources-plugin.artefactId>maven-resources-plugin</lib.maven-resources-plugin.artefactId>
    <lib.maven-resources-plugin.version>2.4.3</lib.maven-resources-plugin.version>

    <lib.versions-maven-plugin.groupId>org.codehaus.mojo</lib.versions-maven-plugin.groupId>
    <lib.versions-maven-plugin.artefactId>versions-maven-plugin</lib.versions-maven-plugin.artefactId>
    <lib.versions-maven-plugin.version>1.2</lib.versions-maven-plugin.version>

    <lib.jfreechart.groupId>jfree</lib.jfreechart.groupId>
    <lib.jfreechart.artefactId>jfreechart</lib.jfreechart.artefactId>
    <lib.jfreechart.version>1.0.12</lib.jfreechart.version>

    <lib.jfree-jcommon.groupId>jfree</lib.jfree-jcommon.groupId>
    <lib.jfree-jcommon.artefactId>jcommon</lib.jfree-jcommon.artefactId>
    <lib.jfree-jcommon.version>1.0.9</lib.jfree-jcommon.version>

    <lib.apache-httpclient.groupId>org.apache.httpcomponents</lib.apache-httpclient.groupId>
    <lib.apache-httpclient.artefactId>httpclient</lib.apache-httpclient.artefactId>
    <lib.apache-httpclient.version>4.0.1</lib.apache-httpclient.version>

    <lib.apache-commons-math.groupId>commons-math</lib.apache-commons-math.groupId>
    <lib.apache-commons-math.artefactId>commons-math</lib.apache-commons-math.artefactId>
    <lib.apache-commons-math.version>1.2</lib.apache-commons-math.version>

  </properties>

  <groupId>org.novelang</groupId>
  <artifactId>Novelang</artifactId>
  <packaging>pom</packaging>
  <version>0.44.4</version>
  <name>Novelang</name>
  <url>http://novelang.sf.net</url>

  <modules>
    <module>modules/bootstrap</module>
    <module>modules/code-generation</module>
    <module>modules/documentation</module>
    <module>modules/distribution</module>
    <module>modules/engine</module>
    <module>modules/engine-driver</module>
    <module>modules/lexeme-table-plugin</module>
    <module>modules/nhovestone</module>

    <!-- Don't include: we don't want to run a whole benchmark for each integration-test. -->
    <!-- <module>modules/nhovestone-report</module> -->

    <module>modules/parser-antlr</module>
    <module>modules/parser-facade</module>
    <module>modules/parser-ground</module>
    <module>modules/parser-lexeme-plugin</module>
    <module>modules/parser-supplement</module>
    <module>modules/parser-token-plugin</module>
    <module>modules/primer</module>
    <module>modules/process-driver</module>
    <module>modules/producer-plugin</module>
    <module>modules/syntactic-tree</module>
    <module>modules/syntactic-tree-fixture</module>
    <module>modules/tree</module>
    <module>modules/unicode-reader</module>
    <module>modules/unicode-generator-plugin</module>
    <module>modules/vanilla-fixture</module>
  </modules>


  <build>

    <extensions>
      <extension>
        <groupId>${lib.maven-wagon-ssh.groupId}</groupId>
        <artifactId>${lib.maven-wagon-ssh.artifactId}</artifactId>
        <version>${lib.maven-wagon-ssh.version}</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>${lib.cobertura.groupid}</groupId>
          <artifactId>${lib.cobertura.artefactid}</artifactId>
          <version>${lib.cobertura.version}</version>
        </plugin>


        <!--
          Disable default deployment because we don't want to feed an Maven repository.
          Instead, Wagon directly uploads files on SourceForge.
        -->
        <plugin>
          <groupId>${lib.maven-deploy-plugin.groupId}</groupId>
          <artifactId>${lib.maven-deploy-plugin.artefactId}</artifactId>
          <version>${lib.maven-deploy-plugin.version}</version>
          <configuration>
            <skip>true</skip>
         </configuration>
       </plugin>

        <plugin>
          <groupId>${lib.maven-release-plugin.groupId}</groupId>
          <artifactId>${lib.maven-release-plugin.artefactId}</artifactId>
          <version>${lib.maven-release-plugin.version}</version>
          <configuration>
            <localCheckout>true</localCheckout>
            <tag>release-${releaseVersion}</tag>
            <developmentVersion>SNAPSHOT</developmentVersion>
          </configuration>
        </plugin>


      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>${lib.versions-maven-plugin.groupId}</groupId>
        <artifactId>${lib.versions-maven-plugin.artefactId}</artifactId>
        <version>${lib.versions-maven-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>${lib.maven-compiler-plugin.groupId}</groupId>
        <artifactId>${lib.maven-compiler-plugin.artefactId}</artifactId>
        <version>${lib.maven-compiler-plugin.version}</version>
        <configuration>
          <fork>true</fork>
          <target>1.6</target>
          <source>1.6</source>
          <encoding>UTF-8</encoding>
          <debug>true</debug>
          <debuglevel>lines,vars,source</debuglevel>
        </configuration>
      </plugin>

      <plugin>
        <groupId>${lib.maven-release-plugin.groupId}</groupId>
        <artifactId>${lib.maven-release-plugin.artefactId}</artifactId>
        <version>${lib.maven-release-plugin.version}</version>
        <configuration>
          <preparationGoals>install</preparationGoals>
          <goals>deploy</goals>
        </configuration>
      </plugin>

      <!--
        Using a tweaked plugin supporting external files.
        Default implementation prohibits this, as it makes build non-repeatable.
        But we need to keep some confidential information (for publishing) out of
        public repository.
      -->
<!--
      <plugin>
        <groupId>${lib.properties-maven-plugin.groupId}</groupId>
        <artifactId>${lib.properties-maven-plugin.artefactId}</artifactId>
        <version>${lib.properties-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <filePaths>
                <filePath>${user.home}/.novelang-project.properties</filePath>
              </filePaths>
            </configuration>
          </execution>
        </executions>
      </plugin>
-->


      <!-- Hopefully executes after plugin declared above; needs declared properties. -->
<!--
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <echo>user.home=${user.home}</echo>
                <echo>blogging.blog.secretpostingaddress=${blogging.blog.secretpostingaddress}</echo>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
-->

    </plugins>

  </build>


  <scm>
    <!--<connection>scm:https://caillette@github.com/caillette/novelang.git</connection>-->
    <!--<connection>scm:git:file://.</connection>-->
    <connection>scm:git:git@github.com:caillette/novelang.git</connection>
           <url>scm:git:git@github.com:caillette/novelang.git</url>
    <developerConnection>scm:git:git@github.com:caillette/novelang.git</developerConnection>
  </scm>

  <reporting>
    <plugins>

<!--
      <plugin>
        <groupId>${lib.cobertura.groupid}</groupId>
        <artifactId>${lib.cobertura.artefactid}</artifactId>
        <version>${lib.cobertura.version}</version>
      </plugin>
-->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.5</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.7</version>
      </plugin>

    </plugins>
  </reporting>



  <dependencies>

    <dependency>
      <groupId>${lib.junit.groupid}</groupId>
      <artifactId>${lib.junit.artefactid}</artifactId>
      <version>${lib.junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.collections</groupId>
      <artifactId>google-collections</artifactId>
      <version>1.0</version>
    </dependency>

    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.1</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.3</version>
    </dependency>

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-reflect</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.5.11</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${lib.logback.groupid}</groupId>
      <artifactId>logback-core</artifactId>
      <version>${lib.logback.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${lib.logback.groupid}</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${lib.logback.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <version>0.1.42</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.6</version>
    </dependency>

    <dependency>
      <groupId>net.sourceforge.htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
      <version>2.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.5.11</version>
    </dependency>


  </dependencies>

  <!--
    release:perform wants some valid VCS where release:prepare did put the stuff into.
    Let's say the local one is enough.
    deploy:deploy wants a non-empty value.
  -->
  <distributionManagement>
    <repository>
      <id>nullrepository</id>
      <name>Null repository (shortcutting Maven default deployment)</name>
      <url>file://./target/null-repository</url>
    </repository>
  </distributionManagement>


  <developers>
    
    <!--
      Must be the first of the list to become the mail sender when deploying
      Novelang-distribution.
      This is because I don't know another way to configure the changes-plugin.
    -->
    <developer>
      <id>announcer</id>
      <name>Novelang release announcer</name>
      <email>${announcement.user.email}</email>
      <roles>
        <role>send emails</role>
      </roles>
    </developer>

  </developers>



</project>


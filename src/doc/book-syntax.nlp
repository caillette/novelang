
*** Book files

Book files aggregate part files. Book files have the ``.nlb`` suffix  (like NoveLang Book). 


=== Command : ``insert``

Book files are useful when there is too much text to fit inside one Part file. It is also easier to reorganize small Parts by changing their order in a Book file than copy `/ pasting` inside one big file.

When Part files become too numerous, Book files can refer to multiple Part files at once. Referring to project layout, here is a well-formed Book file:

<<<
insert file:path/to/myfirstpart.nlp

insert file:path/to/mysecondpart.nlp
>>>

When the Parts are located in the same directory as the Book file, the single dot notation (for current directory) is supported:

<<<
insert file:. 
>>>


The ``$recurse`` option scans parts in subdirectories.

<<<
insert file:. $recurse 
>>>

The ``$createchapter`` option adds the content of the file under one chapter element. The chapter title is the filename, path and ``.nlp`` extension being trimmed.

<<<
insert file:. $recurse $createchapter
>>>

The ``$style=...`` assignment adds a ``STYLE`` node to each of the trees corresponding to added part. 

<<<
insert file:. 
  $style=mystyle
>>>

Expert users will find this is useful for customizing the output right from an XSLT stylesheet:

<<<
<!-- Process styled chapter: -->
<xsl:apply-templates select="//n:chapter[n:style='mystyle']" />

<!-- Don't process styled chapter: -->
<xsl:apply-templates select="//n:chapter[not(n:style!='')]" /> 
>>>


=== Command : ``mapstylesheet``

The "mapstylesheet" command defines a stylesheet for one or more MIME type. Referring to project layout above, here is the command to insert in ``book.nlb`` file in order to render HTML documents with ``html-beautiful.xsl`` and PDF documents with ``pdf-beautiful.xsl``.

<<<
mapstylesheets 
    $html=html-beautiful.xsl
    $pdf=pdf-beautiful.xsl
>>>
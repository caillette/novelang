
*** Syntax for Parts

Part files focus on a textual content. Part files have the ``.nlp`` suffix. They support multiple syntactic features. A great example of Novelang syntax is the source of this page. You can find it on:

http://github.com/caillette/novelang/tree/master/src/doc


=== Chapter

A chapter begins with three asterisks "``***``", immediately followed by an optional title.
Then an empty line separates the chapter title from its content.

Chapter title supports the same features as a paragraph (italics, quotes...).

<<<
*** Chapter's title

Chapter content starts here.
>>>


=== Section

A section begins with three equals sign "``===``", immediately followed by an optional title. 
Then an empty line separates the section title from its content.

Section title supports the same features as a paragraph (italics, quotes...).

<<<
=== Sections's title

Section content starts here.
>>>

=== Italics

An italicized block is delimited by a pair of double solidus "``//``".

<<< 
There are //italics//.
>>>

=== Quotes

A quoted block is delimited by a pair of double quotes "``"``".

<<<
There are "double quotes".
>>>

=== Brackets

A bracketed block starts with a left square bracket "``[``" and ends with a right square bracket "``]``".

<<< 
Here is a [bracketed block].
>>>

=== Parenthesis

A parenthesized block starts with a left parenthesis "``(``" and ends with a right parenthesis "``)``".

<<< 
Here is a (parenthesized block).
>>>


=== Interpolated clause

An interpolated clause starts with a pair of double minus signs "``--``". It ends with another pair for double minus sigh, //or// a single minus sign immediately followed by a minus sign and a low line for closing "`-_`". When using the second closing form, it is called the "silent end".

<<< 
Introducing -- as here -- the interpolated clause.

Silent end -- nice for ending a sentence-_.
>>>

The "silent end" means closing dash should not be rendered but it gives a hint of where the interpolated clause ends. This is useful for rendering, because an interpolated clause is not just made of dash characters: non-breakable spaces should be inserted at the correct place.


=== Paragraph

A paragraph is made of text on multiple lines, that may be separated by a single line break.

<<< 
Here is one paragraph,
on two lines.

Here is another paragraph.
>>>

Paragraph may include italics, quotes, brackets, parenthesis, interpolated clauses.

=== Blockquote

A blockquote starts with a double less-than sign "``<<``" at the beginning of a line, immediately followed by a line break. It ends with a double greater-than sign "``>>``" at the start of a line. 

<<<
<<
Blockquote here.

May include several paragraphs.
>>
>>>


=== Block litteral

A blockquote starts with a triple less-than sign "``<<<``" at the beginning of a line, immediately followed by a line break. It ends with a triple greater-than sign "``>>>``" at the start of a line. 

<<<
<<<
Here is litteral.
  Indentation will be kept.
«greaterthan»>>
>>>

Litteral blocks are useful to display text verbatim. The text inside can be almost anything, except three closing angled brackets at the very start of a line. For displaying them (as in the example shown above), use escaped characters.


=== URL

A URL is typed as-it-is. There must be a line break before and a line break after.

<<<
http://novelang.blogspot.com
>>>


=== Escaped characters

Some characters

Novelang uses some characters for its markup. For displaying those characters in the rendered documents, they must be escaped -- special codes must be used-_.

<<<
>   «startescape»greaterthan«endescape» 
«startescape»   «startescape»startescape«endescape» 
«endescape»   «startescape»endescape«endescape» 
>>>

Using those character is exceptional, however -- except in Novelang documentation!-_ Most of useful character are accessible as litteral.

=== Comments

Sometimes it is useful to tell Novelang to ignore some lines in a Part files.

Line comments begin with double percent sign "``%````%``".

Blocks comments are delimited by a pair of double accolades  "``{````{``" and  "``}````}``".


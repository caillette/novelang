<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <relativePath>../../pom.xml</relativePath>
    <groupId>org.novelang</groupId>
    <artifactId>Novelang</artifactId>
    <version>SNAPSHOT</version>
  </parent>

  <artifactId>Novelang-engine</artifactId>
  <name>${artifactId}</name>

  <properties>
    <updatedVersionSources.dir>${project.build.directory}/tweaked</updatedVersionSources.dir>
    <versionJavaClassName>Version</versionJavaClassName>
  </properties>

  <build>
    

    <plugins>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <!--
                There is no known mean to configure Maven compiler plugin to compile
                one file separately, from its special source path.
                So we cheat here, using Ant's Javac task. This overwrites normally compiled class.
            -->
            <configuration>
              <tasks>

                <delete dir="${updatedVersionSources.dir}" />
                <mkdir dir="${updatedVersionSources.dir}" />

                <copy todir="${updatedVersionSources.dir}">
                  <fileset dir="${project.build.sourceDirectory}">
                    <include name="**/${versionJavaClassName}.java" />
                  </fileset>
                </copy>

                <replace dir="${updatedVersionSources.dir}" value="${project.version}">
                  <replacetoken>@SNAPSHOT@</replacetoken>
                </replace>
                
                <javac srcdir="${updatedVersionSources.dir}" destdir="${project.build.outputDirectory}" debug="on" />

              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>

      </plugin>

    </plugins>
  </build>
  

  <dependencies>

<!--
  ====================
  3rd-party libraries.
  ====================
-->

    <dependency>
        <groupId>dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>1.6.1</version>
    </dependency>

    <dependency>
      <!-- dom4j needs that for XPath queries. TODO: remove once ImageFixer uses pull parsing. -->
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
      <version>1.1.1</version>
      <scope>runtime</scope>
    </dependency>
    
    <dependency>
      <!-- For configuring FOP. -->
      <groupId> org.apache.avalon.framework</groupId>
      <artifactId>avalon-framework-impl</artifactId>
      <version>4.3.1</version>
    </dependency>

    <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>fop</artifactId>
        <version>0.95</version>
    </dependency>

    <dependency>
      <!-- JDK's XSLT implementation doesn't work well. -->
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <version>2.7.1</version>
    </dependency>

    <dependency>
      <!-- JDK's XSLT implementation doesn't work well. -->
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>2.9.1</version>
    </dependency>

    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
      <version>6.1.24</version>
    </dependency>


    
<!--
  =================
  Novelang modules.
  =================
-->
    
    <dependency>
      <groupId>${parent.groupId}</groupId>
      <artifactId>Novelang-primer</artifactId>
      <version>${parent.version}</version>
    </dependency>

    <dependency>
      <groupId>${parent.groupId}</groupId>
      <artifactId>Novelang-parser-facade</artifactId>
      <version>${parent.version}</version>
    </dependency>

    <dependency>
      <groupId>${parent.groupId}</groupId>
      <artifactId>Novelang-vanilla-fixture</artifactId>
      <version>${parent.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>${parent.groupId}</groupId>
      <artifactId>Novelang-syntactic-tree-fixture</artifactId>
      <version>${parent.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

</project>


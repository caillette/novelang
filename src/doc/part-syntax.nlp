
== General syntax for Parts

Part files focus on a textual content. Part files have the ``.nlp`` suffix. 
They support multiple syntactic features. 
A great example of Novelang syntax is the source of this page. You can find it on:

http://github.com/caillette/novelang/tree/master/src/doc

This document explains the effect of syntactic features supported inside Part files. 

The "rendering name" is useful for stylesheet writers.


=== What's a paragraph


=== What's a word


=== Punctuation signs


=== What's a block
 

=== What's literal


=== What's a delimiter


=== What's a section



== Detailed syntax for Parts

=== Block inside pair of solidus

[``n:block-inside-solidus-pairs``]

A pair of solidus "``//``" may enclose a block of text.

With Novelang default stylesheet, such text is rendered as italics: 

<<< 
There are //italics//.
>>>


=== Block inside double quotes

[``n:block-inside-double-quotes``]

A pair of double quotes "``"``" may enclose a block of text.

With Novelang default stylesheet, such text is rendered inside double quotes. 
The character may vary depending on the language.

<<<
There are "double quotes".
>>>


=== Block inside square brackets

[``n:block-inside-square-brackets``]

A pair of square brackets "``[``" and "``]``" may enclose a block of text.

With Novelang default stylesheet, such text is rendered inside square brackets. 

<<<
There are [square brackets].
>>>


=== Block inside parenthesis

[``n:block-inside-parenthesis``]

A pair of square brackets "``(``" and "``)``" may enclose a block of text.

With Novelang default stylesheet, such text is rendered inside parenthesis. 

<<<
There are (parenthesis).
>>>


=== Block inside double hyphen

[``n:block-inside-hyphen-pairs``]

A pair of square "``--``" may enclose a block of text.

[``n:block-inside-two-hyphens-then-hyphen-low-line``]

There is an alternative where the ending delimiter is an hyphen then a low line ("``_``").

With Novelang default stylesheet, such text is rendered inside a pair of en dash characters 
(or em dash depending on language). This creates an interpolated clause.
With the ending low line, there is no visible ending. 

<<<
See -- interpolated clause -- here.
See -- no visible end -_.
>>>


=== Block of literal inside grave accents 

[``n:block-of-literal-inside-grave-accents``]

A pair of grave accents "``«inlineliteral»``" may enclose a block of text containing characters 
which are not allowed otherwise (because they serve other Novelang grammar's purpose).

With Novelang default stylesheet, such text is rendered as normal text.

<<<
Almost `4ny- ch@rac7er 0.0.0 "'&#^> / *`
>>>



=== Blockquote

A blockquote starts with a double less-than sign "``<<``" at the beginning of a line, immediately followed by a line break. It ends with a double greater-than sign "``>>``" at the start of a line. 

<<<
<<
Blockquote here.

May include several paragraphs.
>>
>>>


=== Block literal

A block literal starts with a triple less-than sign "``<<<``" at the beginning of a line, immediately followed by a line break. It ends with a triple greater-than sign "``>>>``" at the start of a line.

<<<
<<<
Here is literal.
  Indentation will be kept.
«greaterthan»>>
>>>

Literal blocks are useful to display text verbatim. The text inside can be almost anything, except three closing angled brackets at the very start of a line. For displaying them (as in the example shown above), use escaped characters.


=== Soft inline literal

Soft inline literal is delimited with a grave accent "``«inlineliteral»``".

<<<
Almost `4ny- ch@rac7er 0.0.0 "'&#^> / *`
>>>
%%"

Soft inline literal tells Novelang to drop syntactic rules, and don't mind about characters that normally have other purpose. Soft inline literal may contain almost any character, except of course the grave accent. In the rare case where a grave accent is required, use an escaped character.


=== Hard inline literal

Hard inline literal is delimited with a double grave accent "``«inlineliteral»«inlineliteral»``".

<<<
Almost ``4ny- ch@rac7er 0.0.0 "'&#^> / *``
>>>
%%

Hard inline literal works as soft inline literal, but rendering should add a special style (like monospaced fonts) to draw the attention of the reader the text is verbatim (like a programming language item).


=== Superscript

Superscript appears only at the end of a word and therefore only requires a delimiter on the left, which is the circumflex character "``^``".

<<<
April, the 1^st.
>>>


=== URL

A URL is typed as-it-is. There must be a line break before and a line break after.

<<<
http://novelang.blogspot.com
>>>


=== Escaped characters

Novelang uses some characters for its markup. For displaying those characters in the rendered documents, they must be escaped -- special codes must be used-_.

<<<
>   «startescape»greaterthan«endescape» 
«startescape»   «startescape»startescape«endescape» 
«endescape»   «startescape»endescape«endescape» 
«inlineliteral»   «startescape»inlineliteral«endescape»
>>>

Using those character is exceptional, however -- except in Novelang documentation!-_ Most of useful character are accessible as literal.

=== Comments

Sometimes it is useful to tell Novelang to ignore some lines in a Part files.

Line comments begin with double percent sign "``%````%``".

Blocks comments are delimited by a pair of double accolades  "``{````{``" and  "``}````}``".

